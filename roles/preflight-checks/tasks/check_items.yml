---
- name: ensure ssl.cafile is defined
  assert:
    that: "ssl.cafile is defined"
    msg: "ssl.cafile must be defined based on the operating system {{ ursula_os }}"

- block:
  - name: check whether neutron-client is installed
    command: neutron --version
    register: result_neutron_installed
    failed_when: false
    changed_when: false

  - name: check whether neutron endpoint exists
    shell: . /root/stackrc; openstack endpoint list | grep neutron
    failed_when: false
    changed_when: false
    register: result_neutron_endpoint

  - include: neutron.yml
    when:
      - result_neutron_installed.rc == 0
      - result_neutron_endpoint.rc == 0

  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true

# ceph cluster checks
- block:
  - name: check ceph installed
    command: ceph --version
    register: result_ceph_installed
    failed_when: false
    changed_when: false
    delegate_to: "{{ groups['ceph_monitors'][0] }}"

  - name: Check whether Cinder endpoint exists
    shell: . /root/stackrc; openstack endpoint list | grep cinder
    failed_when: false
    changed_when: false
    register: result_cinder_endpoint
    delegate_to: "{{ groups['controller'][0] }}"

  - include: ceph.yml
    when:
      - result_ceph_installed.rc == 0
      - result_cinder_endpoint.rc == 0
  when: ceph.enabled
  tags: ['precheck_ceph']
  run_once: true

# individual ceph nodes checks
- block:
  - name: get ceph version number
    shell: ceph --version |grep -oP "\d+\.\d+\.?\d{0,3}"
    failed_when: false
    changed_when: false
    register: result

  - name: fail if current ceph version is less than Jewel
    shell: test {{ result.stdout }} \> "{{ preflight_checks.ceph_minimum_version }}"
    changed_when: false
    when: result.rc == 0
  when:
    - ceph.enabled
    - "'ceph_monitors' in group_names or 'ceph_osds' in group_names"
  tags: ['precheck_ceph']
