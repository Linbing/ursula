---
# We do preflight checks to ensure the cluster is in good state before *re-run*.
# Otherwise, re-run may bring cluster into a very bad state.
# But we should know this is a re-run or first-run by some conditions, such as endpoint.
- block:
  - name: check whether neutron-client is installed
    command: neutron --version
    register: result_neutron_installed
    failed_when: false

  - name: check whether neutron endpoint exists
    shell: . /root/stackrc; openstack endpoint list | grep neutron
    failed_when: false
    register: result_neutron_endpoint

  - include: neutron.yml
    when:
      - result_neutron_installed.rc == 0
      - result_neutron_endpoint.rc == 0

  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true

- block:
  - name: check ceph installed
    command: ceph --version
    register: result_ceph_installed
    failed_when: false
    delegate_to: "{{ groups['ceph_monitors'][0] }}"

  - name: Check whether Cinder endpoint exists
    shell: . /root/stackrc; openstack endpoint list | grep cinder
    failed_when: false
    register: result_cinder_endpoint
    delegate_to: "{{ groups['controller'][0] }}"

  - include: ceph.yml
    when:
      - result_ceph_installed.rc == 0
      - result_cinder_endpoint.rc == 0
  when: ceph.enabled | default('False') | bool
  tags: 'precheck_ceph'
  run_once: true

#To ensure ceph-common is installed from cloud archive repo and not bbc ceph repo
- block:
  - name: remove ceph repo from controllers and computes
    apt_repository:
      repo: 'deb {{ apt_repos.ceph.repo }} {{ ansible_lsb.codename }} main'
      state: absent
      update_cache: yes

  #Remove unwanted ceph pkgs without removing dependecies to avoid impacts to libivrt
  - name: remove unwanted ceph packages from controller and compute nodes
    command: dpkg -P ceph ceph-osd ceph-mon ceph-mds ceph-fuse ceph-fs-common ceph-base

  - name: remove ceph serverspec checks
    file:
      path: /etc/serverspec/spec/localhost/ceph_spec.rb
      state: absent

  when: ('controller' in group_names) or ('compute' in group_names)
